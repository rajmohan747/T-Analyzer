An offensive smelling toilet is more often caused by a lack of cleaning.While regular cleaning definitely minimizes toilet odor,depending on the usage rate,the frequency in which toilet should be cleaned would varies.
In this project a solution is proposed to  analyze and detect various odour levels in rest rooms/toilets.It produces alerts at instances where the odor level exceeds the limit.The system consists of a transmitter module which is kept inside the toilet and a receiver/display module which is kept either just outside toilet or within the vicinity of cleaning staffs.

The sytem consists of various gas sensors like MQ2,MQ3,MQ6,MQ135 for detecting different gaseous componenets in the environment. The sensor values were logged for 5 hours and k-means clustering was done for classifying the values into two different regions. Depending on the average distance of the new sensor values from the centroid values,the condition in the restroom would be analyzed. Based on the different odour level detected,the display color of LED indicator placed outside the toilet changes. The communication across the transmitter and receiver module happens across NRF module. Arduino Mega was used as the main controller for the transmitter and receiver modules
 

Set up the transmitter section according to the Arduino Sketch given.Upload the code transmitter.ino in the Arduino
The gas sensors used for this project are MQ2,MQ3,MQ4,MQ5.Sensors are powered from Arduino Mega and the analog values are read with the analog pins.
Power up the transmitter circuitry and read the sensor values using the android application 'Serial Bluetooth Terminal'

https://play.google.com/store/apps/details?id=de.kai_morich.serial_bluetooth_terminal&hl=en

Using the application,'Serial Bluetooth Terminal' keep a log of the values in the environment under observation.
Take log for 5-6 hours.Once the values are obtained,using k-means find the cluster centroids.

Use k_means.py for finding the cluster centroids.

It will produce cluster centroid values for 'GOOD' and 'WORSE' conditions.
Update the centroid values in the Arduino code,transmitter.ino 


Set up the receiver section according to the Arduino Sketch given.
Upload the code receiver.ino in the Arduino
You can use either RGB led strips or 16*2 lcd display or buzzers for the alerts on worse conditions.
Update the receiver circuit and receiver.ino code accordingly
